Binary files src/Olinux-x86_64/alglin1.o and b/Olinux-x86_64/alglin1.o differ
Only in src/Olinux-x86_64: libpari-gmp.so.2.5.5
diff -ru src/src/basemath/alglin1.c b/src/basemath/alglin1.c
--- src/src/basemath/alglin1.c	2014-01-09 15:43:35.847263581 +0100
+++ b/src/basemath/alglin1.c	2014-01-09 15:55:47.903649326 +0100
@@ -2412,6 +2412,7 @@
   a = RgM_shallowcopy(a);
   for (i=1; i<nbco; i++)
   {
+    int garbage = 0;  /* Only gerepile() once per loop iteration */
     for(k=i; k<=nbco; k++)
     {
       gcoeff(a,k,i) = modii(gcoeff(a,k,i), p);
@@ -2435,7 +2436,7 @@
       for (j=i+1; j<=nbco; j++)
       {
         gcoeff(a,j,k) = Fp_sub(gcoeff(a,j,k), Fp_mul(m,gcoeff(a,j,i),p),p);
-        if (low_stack(lim, stack_lim(av,1)))
+        if (low_stack(lim, stack_lim(av,1)) && (garbage++ == 0))
         {
           if(DEBUGMEM>1) pari_warn(warnmem,"det. col = %ld",i);
           gerepileall(av,2, &a,&x);
@@ -2994,6 +2995,7 @@
   a = RgM_shallowcopy(a);
   for (i=1; i<nbco; i++)
   {
+    int garbage = 0;  /* Only gerepile() once per loop iteration */
     k = pivot(a, data, i, NULL);
     if (k > nbco) return gerepilecopy(av, gcoeff(a,i,i));
     if (k != i)
@@ -3013,7 +3015,7 @@
       for (j=i+1; j<=nbco; j++)
       {
         gcoeff(a,j,k) = gsub(gcoeff(a,j,k), gmul(m,gcoeff(a,j,i)));
-        if (low_stack(lim, stack_lim(av,1)))
+        if (low_stack(lim, stack_lim(av,1)) && (garbage++ == 0))
         {
           if(DEBUGMEM>1) pari_warn(warnmem,"det. col = %ld",i);
           gerepileall(av,2, &a,&x);
@@ -3063,6 +3065,7 @@
   {
     GEN ci, ck, m;
     int diveuc = (gequal1(pprec)==0);
+    int garbage = 0;  /* Only gerepile() once per loop iteration */
 
     p = gcoeff(a,i,i);
     if (gequal0(p))
@@ -3099,7 +3102,7 @@
           GEN p1 = gsub(gmul(p,gel(ck,j)), gmul(m,gel(ci,j)));
           if (diveuc) p1 = mydiv(p1,pprec);
           gel(ck,j) = gerepileupto(av2, p1);
-          if (low_stack(lim,stack_lim(av,2)))
+          if (low_stack(lim,stack_lim(av,2)) && (garbage++ == 0))
           {
             if(DEBUGMEM>1) pari_warn(warnmem,"det. col = %ld",i);
             gerepileall(av,2, &a,&pprec);

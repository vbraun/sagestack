#!/usr/bin/env bash

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting"
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

unset RM

ROOT_DIR="`pwd`"

INCLUDES="-I$SAGE_LOCAL/include"

CFLAGS="$CFLAGS $INCLUDES -g"

COMPILER=`testcc.sh $CC`

if [ "$COMPILER"  = "GCC" ] ; then
   CFLAGS="$CFLAGS -fPIC -Wall -pedantic"
elif [ "$COMPILER" = "Sun_Studio" ] ; then
   CFLAGS="$CFLAGS -Kpic"
elif [ "$COMPILER" = "HP_on_HP-UX" ] ; then
   CFLAGS="$CFLAGS + z"
fi

if [ "x$SAGE_DEBUG" = "xyes" ]; then
   CFLAGS="$CFLAGS -O0"
   ENABLE_DEBUG="--enable-debug"
else
   CFLAGS="$CFLAGS -O2"
   ENABLE_DEBUG=""
fi

if [ "x$SAGE64" = "xyes" ]; then
    CFLAGS="$CFLAGS -m64"
fi

export CFLAGS

if [ "x$SAGE_FAT_BINARY" = "xyes" ]; then
    DISABLE_SSE2="--disable-sse2"
else
    DISABLE_SSE2=""
fi

# otherwise we might run into problems with old headers

if [ -d "$SAGE_LOCAL/include/m4ri" ]; then
    rm -rf "$SAGE_LOCAL/include/m4ri"
fi

#build M4RI

cd $ROOT_DIR/src/

./configure --prefix="$SAGE_LOCAL" --libdir="$SAGE_LOCAL/lib" $ENABLE_DEBUG $DISABLE_SSE2

if [ $? -ne 0 ]; then
    echo "Error configuring libm4ri"
    exit 1
fi

$MAKE

if [ $? -ne 0 ]; then
    echo "Error building libm4ri"
    exit 1
fi

$MAKE install

if [ $? -ne 0 ]; then
    echo "Error installing libm4ri"
    exit 1
fi


